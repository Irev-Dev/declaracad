import math
from enaml.core.api import Looper
from declaracad.occ.api import (
    Transform, Revol, Face, Polyline, Wire, Part, Translate, Bezier
)

enamldef Bit(Transform): bit:
    attr length = 35 # Todo
    attr width = 10
    alias angle: revol.angle
    operations = [Translate(*self.position)]
    attr points << [
            (0, 0, 0),
            (0, bit.width, 0),
            (0, bit.width, bit.length),
            (0, bit.width/2.0, bit.length-bit.length/4.0),
            (0, bit.width/2.0, bit.length-bit.length/2.0),
            (0, 0, bit.length/4.0),
            (0, 0, 0)
        ]
    Revol: revol:
        #: Axis of rotation
        position << (0, bit.width, 0)
        Face:
            #: Face similar to https://www.opencascade.com/doc/occt-7.0.0/overview/html/occt_user_guides__modeling_algos.html
            Wire:
                Polyline:
                    points << bit.points


enamldef Assembly(Part):
    name = "Sweeps"
    Bit:
        pass
    Bit:
        length = 40
        position = (-10,-10,0)
        angle = math.pi/4


