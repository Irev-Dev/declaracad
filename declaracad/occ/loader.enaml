"""
Copyright (c) 2020, Jairus Martin.

Distributed under the terms of the GPL v3 License.

The full license is in the file LICENSE, distributed with this software.

Created on Aug, 2020

@author: jrm
"""
import os
from enaml.core.api import Include
from declaracad.occ.part import Part


def load_filename(filename):
    """ Load shapes in the file by looking up the extension from the loader
    registry.

    Returns
    -------
    shapes: List[Shape]
        List of shapes to include in the part

    """
    # Avoid circular import
    from declaracad.occ.loaders import LOADER_REGISTRY

    if not filename or not os.path.exists(filename):
        raise ValueError(f"File '{filename}' does not exist!")

    path, ext = os.path.splitext(filename.lower())
    hook = LOADER_REGISTRY.get(ext)
    if hook is None:
        return []
    loader = hook()
    return loader(filename=filename)


enamldef LoadedPart(Part):
    """ Load a part from the given path. This will create subshapes
    for each piece in the part.

    """
    attr filename: str
    description << filename[0:100]
    Include:
        objects << load_filename(filename)
