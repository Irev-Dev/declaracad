"""
Copyright (c) 2017, Jairus Martin.

Distributed under the terms of the GPL v3 License.

The full license is in the file LICENSE, distributed with this software.

Created on Dec 12, 2017

@author: jrm
"""
import re
import sys
if sys.platform == 'win32':
    from enaml import winutil
from OCCT import __version__ as OCCT_VERSION
from enaml.core.api import Looper
from enaml.layout.api import align, hbox, spacer
from enaml.core.api import Conditional, Include
from enaml.stdlib.dialog_buttons import DialogButtonBox, DialogButton
from enaml.stdlib.task_dialog import (
    TaskDialogBody, TaskDialogCommandArea,
    TaskDialogContentArea, TaskDialogDetailsArea, TaskDialogFootnoteArea,
    TaskDialogIconArea, TaskDialogInstructionArea, TaskDialogStyleSheet
)
from enaml.widgets.api import (
    Dialog, Field, Label, PushButton, Form, ObjectCombo, SplitItem, Splitter,
    Container, SpinBox, FileDialogEx, ObjectCombo

)
from enamlx.widgets.api import TreeView, TreeViewItem



enamldef SystemSettingsPage(Container):
    attr model
    Form:
        Label:
            text = "Theme"
        ObjectCombo:
            items = list(model.get_member('dock_style').items)
            selected := model.dock_style
        Label:
            text = "OCCT Version"
        Label:
            text = str(OCCT_VERSION)


enamldef SettingsDialog(Dialog): dialog:
    title = 'Settings'
    initial_size = (720, 480)
    attr plugin
    attr model
    attr event
    Conditional:
        # Only use this if not using the system theme
        condition << plugin.dock_style != 'system'
        TaskDialogStyleSheet:
                pass
    TaskDialogBody:
        TaskDialogInstructionArea:
            Label:
                style_class = 'task-dialog-instructions'
                text = 'Settings'
        TaskDialogContentArea:
             Label:
                 style_class = 'task-dialog-content'
                 text = 'Adjust default settings'
        TaskDialogDetailsArea: details:
            visible = True
            Splitter:
                SplitItem:
                    Container:
                        padding = 0
                        #Field:
                        #    placeholder = "Search..."
                        TreeView: tree:
                            horizontal_headers = ['Setting']
                            horizontal_stretch = True
                            show_root = False
                            show_horizontal_header = False
                            show_vertical_header = False
                            items << plugin.settings_pages
                            Looper:
                                iterable << tree.items
                                TreeViewItem:
                                    text = loop_item.name
                                    clicked :: plugin.settings_page = loop_item
                SplitItem:
                    stretch = 4
                    Include: settings:
                        func get_settings_page(d):
                            """ Create the settings view for the current page """
                            model = plugin.workbench.get_plugin(d.plugin_id)
                            dialog.model = model
                            SettingsView = d.factory()
                            return [SettingsView(model=model)]
                        objects << get_settings_page(plugin.settings_page)

        TaskDialogCommandArea:
            constraints = [
                hbox(spacer, btn_ok, btn_no),
                align('v_center', btn_ok, btn_no),
            ]
            PushButton: btn_ok:
                text = "Ok"
                clicked ::
                    if model:
                        model.save()
                    dialog.close()
            PushButton: btn_no:
                text = "Cancel"
                clicked :: dialog.close()



