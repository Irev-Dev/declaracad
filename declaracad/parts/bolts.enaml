# Created in DeclaraCAD
from math import sin, cos, pi, radians
from declaracad.occ.api import *


enamldef HexSocketHead(Transform): head:
    attr diameter = 3
    attr height = diameter / 2
    attr depth = height * 2/3
    attr fillet = diameter / 15
    transparency = 0.5
    Fillet:
        radius = fillet
        operations = [
            base.topology.edges[0],
            base.topology.edges[2]
        ]
        Cut:
            Cylinder: base:
                height = head.height
                radius = diameter / 2
            Common:
                Prism: prism:
                    vector = (0, 0, depth)
                    Face:
                        Polygon: hexagon:
                            position = (0, 0, height-depth)
                            count = 6
                            radius = base.radius * 2/3
                Cone: # I'm not sure if this is needed
                    radius = hexagon.radius * 2
                    direction = (0, 0, -1)
                    position = (0, 0, head.height)
                    height = head.height
            Cone:
                    radius = hexagon.radius
                    direction = (0, 0, -1)
                    position = (0, 0, head.height)
                    height = depth


enamldef HexSocketBolt(Part): bolt:
    """ An allen socket hex head bolt centered about the bottom of the head.

    """
    attr length = 8
    attr diameter = 3
    alias head
    alias body
    Chamfer:
        material = bolt.material
        color = bolt.color
        transparency = bolt.transparency
        distance = body.radius * 1/3
        func get_bottom_face():
            return [all.topology.faces[12]]

        operations = get_bottom_face()
        Fuse: all:
            HexSocketHead: head:
                diameter = bolt.diameter
            Cylinder: body:
                position = (0, 0, -bolt.length)
                radius = head.diameter/2 * 1/2
                height = bolt.length

enamldef CounterSunkPhillips(Part): bolt:
    attr length = 8
    attr diameter = 3
    alias head
    alias body
    alias fin
    Chamfer:
        material = bolt.material
        color = bolt.color
        transparency = bolt.transparency
        distance = body.radius * 1/3
        #disabled = True
        func get_bottom_face():
            return [all.topology.faces[1]]

        operations = get_bottom_face()
        Fuse: all:
            Cut:
                Cone: head:
                    position = (0, 0, height/2)
                    radius = bolt.diameter/2
                    direction = (0, 0, -1)
                    height = radius
                Wedge: fin:
                    dx = head.radius/2*2
                    itx = head.height/head.radius/2 # Depth
                    dy = dx
                    direction = (0, 1, 0)
                    rotation = radians(90)
                    position = (0, -dz/2, dx)
                Looper:
                    iterable = (90, 180, 270)
                    Transform:
                        operations = [Rotate(angle=radians(loop.item))]
                        shape = fin
            Cylinder: body:
                position = (0, 0, -bolt.length)
                radius = head.radius * 1/2
                height = bolt.length


enamldef Assembly(Part):
    CounterSunkPhillips:
        diameter = 8
        length = 10
    
    HexSocketBolt:
        diameter = 8
        length = 10
        position = (-10, 0, 0)

    HexSocketBolt:
        color = 'steelblue'
        diameter = 12
        length = 24
        position = (10, 0, 0)
        direction = (0, 1, 0)
