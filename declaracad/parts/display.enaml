from declaracad.occ.api import Part, DisplayLine, Vertex, Box, Topology, Looper


enamldef Axis(Part): part:
    """ Displays an XYZ lines """
    DisplayLine: xaxis:
        color := part.color
        position := part.position
        direction = (1, 0)
    DisplayLine: yaxis:
        color := part.color
        position := part.position
        direction = (0, 1)
    DisplayLine:
        color := part.color
        position := part.position
        direction = (0, 0, 1)


enamldef BoundingBox(Box):
    """ Displays a bounding box of the shape

    """
    attr shapes
    attr bounding_box << Topology.bbox(shapes, tolerance=self.tolerance)
    position << bounding_box.min
    transparency = 0.9
    dx << bounding_box.dx
    dy << bounding_box.dy
    dz << bounding_box.dz


enamldef TopologyPoints(Part): part:
    """ Highlights points on a TopoDS_Wire

    """
    attr topods_shape

    func get_points(s):
        return Topology(shape=s).points

    Looper:
        iterable << get_points(topods_shape)
        Vertex:
            color = part.color
            position = loop.item
            description = str(self.position[:])
