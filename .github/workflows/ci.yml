name: Workflow
on:
  push:
    branches:
    - '*'
  #pull_request:
  #  branches:
  #  - '*'
jobs:
  build:
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        python-version: ['3.8']
    steps:
      - name: "Download"
        uses: actions/checkout@v2
      - name: "Install miniconda"
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: "Configure conda"
        run: |
            conda info
            conda config --add channels conda-forge
      - name: "Install compiler"
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash -l {0}
        run: |
            conda install gxx_linux-64
      - name: "Install"
        shell: bash -l {0}
        run: |
            conda install -c trelau -c conda-forge pyocct
            python -m pip install -e .
            python -m pip install cx-freeze
      - name: "Build dist"
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash -l {0}
        run: |
            python release.py bdist
      - name: "Build msi"
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash -l {0}
        run: |
            python release.py bdist_msi
      - name: "Upload package"
        uses: actions/upload-artifact@v1
        with:
            name: declaracad-py${{ matrix.python-version }}-${{ matrix.os }}
            path: dist
